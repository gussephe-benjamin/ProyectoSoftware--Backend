org: gussepheb
service: api-curso

provider:
  name: aws
  runtime: python3.13
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::912815927287:role/LabRole

  environment:
    TABLE_NAME: t_CURSO
    GSI_profesor: profesor_index

functions:

  # 1) Crear un nuevo curso
  crearCurso:
    handler: lambdas_cursos/lambda_CURSO_crearCurso.lambda_handler
    events:
      - http:
          path: /curso/create
          method: post
          cors: true
          integration: lambda

  # 2) Obtener un curso por su ID
  getCursoById:
    handler: lambdas_cursos/lambda_CURSO_getCursoById.lambda_handler
    events:
      - http:
          path: /curso/get/{cursoId}
          method: get
          cors: true
          integration: lambda

  # 3) Listar todos los cursos en los que está inscrito un alumno específico (por su uid)
  listarCursoByAlumno:
    handler: lambdas_cursos/lambda_CURSO_listarCursoByAlumno.lambda_handler
    events:
      - http:
          path: /curso/list/alumno/{alumnoUid}
          method: get
          cors: true
          integration: lambda

  # 4) Listar todos los cursos impartidos por un profesor específico (por su uid)
  listarCursoByProfesor:
    handler: lambdas_cursos/lambda_CURSO_listarCursoByProfesor.lambda_handler
    events:
      - http:
          path: /curso/list/profesor/{profesorUid}
          method: get
          cors: true
          integration: lambda

  # 5) Agregar uno o varios estudiantes a un curso (enviar lista de student UIDs en el body)
  addStudentToCurso:
    handler: lambdas_cursos/lambda_CURSO_addStudentToCurso.lambda_handler
    events:
      - http:
          path: /curso/{cursoId}/students/add
          method: post
          cors: true
          integration: lambda

  # 6) Eliminar un estudiante de un curso (proporcionar alumnoUid en el path)
  deleteEstudianteCurso:
    handler: lambdas_cursos/lambda_CURSO_deleteEstudianteCurso.lambda_handler
    events:
      - http:
          path: /curso/{cursoId}/students/remove/{alumnoUid}
          method: delete
          cors: true
          integration: lambda

  # 7) Eliminar un curso completo por su ID
  eliminarCurso:
    handler: lambdas_cursos/lambda_CURSO_eliminarCurso.lambda_handler
    events:
      - http:
          path: /curso/delete/{cursoId}
          method: delete
          cors: true
          integration: lambda

resources:
  Resources:
    CursosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}

        AttributeDefinitions:
          - AttributeName: curso_id
            AttributeType: N
          - AttributeName: profesorId
            AttributeType: S

        KeySchema:
          - AttributeName: curso_id
            KeyType: HASH

        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.GSI_profesor}
            KeySchema:
              - AttributeName: profesorId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

        BillingMode: PAY_PER_REQUEST

        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true

        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES